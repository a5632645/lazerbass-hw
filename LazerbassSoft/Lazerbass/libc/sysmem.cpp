/**
 ******************************************************************************
 * @file      sysmem.c
 * @author    Generated by STM32CubeIDE
 * @brief     STM32CubeIDE System Memory calls file
 *
 *            For more information about which C functions
 *            need which of these lowlevel functions
 *            please consult the newlib libc manual
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

/* Includes */
#include <errno.h>
#include <stdint.h>
#include <memory>

/**
 * Pointer to the current high watermark of the heap usage
 */
extern const uint32_t _heap_begin;
extern const uint32_t _heap_end;
static uint8_t *__sbrk_heap_end = nullptr;

/**
 * @brief _sbrk() allocates memory to the newlib heap and is used by malloc
 *        and others from the C library
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
extern "C" void *_sbrk(ptrdiff_t incr)
{
    uint8_t *prev_heap_end = nullptr;
    const uint8_t* heap_end = (uint8_t*)&_heap_end;

    if (__sbrk_heap_end == nullptr) {
        __sbrk_heap_end = (uint8_t *)&_heap_begin;
    }

    /* Protect heap from growing into the reserved MSP stack */
    if (__sbrk_heap_end + incr > heap_end)
    {
        errno = ENOMEM;
        return (void *)-1;
    }

    prev_heap_end = __sbrk_heap_end;
    __sbrk_heap_end += incr;

    return (void *)prev_heap_end;
}
